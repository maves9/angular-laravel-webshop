/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/products': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['0657ea897b5861d1c278a2b6f3d17e4e'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Product: {
      /** Format: int64 */
      id: number;
      name: string;
      /** Format: float */
      price: number;
    };
    ProductVariant: {
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      product_id: number;
      /** Format: int64 */
      variant_type_id: number;
      value: string;
    };
    ProductVariantCombination: {
      /** Format: int64 */
      id: number;
      /** Format: int64 */
      product_id: number;
      sku: string;
      /** Format: float */
      price: number;
      /** Format: int32 */
      stock: number;
      options: string[];
    };
    VariantType: {
      /** Format: int64 */
      id: number;
      name: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  '0657ea897b5861d1c278a2b6f3d17e4e': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description List products */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Product'][];
        };
      };
    };
  };
}
